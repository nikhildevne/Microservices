name: CI/CD to AWS ECS (EC2)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Debug: list all files
      - name: Debug repo contents
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing all files recursively:"
          ls -R

      # 3️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 4️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      # ---------------- App1 ----------------
      - name: Build & push Docker image app1
        run: |
          docker build -t microservices-app1:latest ./app1
          docker tag microservices-app1:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservices-app1:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservices-app1:latest

      - name: Register ECS Task Definition for app1
        run: |
          echo "Replacing <IMAGE> in ECS task definition for app1"
          sed "s|<IMAGE>|$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservices-app1:latest|g" $GITHUB_WORKSPACE/ecs-task-def-app1.json > app1-task-def.json
          echo "Preview of app1-task-def.json:"
          cat app1-task-def.json
          aws ecs register-task-definition --cli-input-json file://app1-task-def.json

      - name: Deploy app1 to ECS
        run: |
          TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition app1-task --query 'taskDefinition.taskDefinitionArn' --output text)
          aws ecs update-service --cluster my-ec2-cluster --service app1-service --task-definition $TASK_DEF_ARN --region $AWS_REGION

      # ---------------- App2 ----------------
      - name: Build & push Docker image app2
        run: |
          docker build -t microservices-app2:latest ./app2
          docker tag microservices-app2:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservices-app2:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservices-app2:latest

      - name: Register ECS Task Definition for app2
        run: |
          echo "Replacing <IMAGE> in ECS task definition for app2"
          sed "s|<IMAGE>|$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/microservices-app2:latest|g" $GITHUB_WORKSPACE/ecs-task-def-app2.json > app2-task-def.json
          echo "Preview of app2-task-def.json:"
          cat app2-task-def.json
          aws ecs register-task-definition --cli-input-json file://app2-task-def.json

      - name: Deploy app2 to ECS
        run: |
          TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition app2-task --query 'taskDefinition.taskDefinitionArn' --output text)
          aws ecs update-service --cluster my-ec2-cluster --service app2-service --task-definition $TASK_DEF_ARN --region $AWS_REGION
